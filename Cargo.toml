[package]
name = "glam_wide"
version = "0.1.0"
edition = "2024"
license = "MIT OR Apache-2.0"
authors = ["Joona Aalto <jondolf.dev@gmail.com>"]
description = "Wide SIMD types for the Glam ecosystem."
documentation = "https://docs.rs/glam_wide"
repository = "https://github.com/Jondolf/glam_wide"
readme = "README.md"
keywords = ["gamedev", "math", "simd", "matrix", "vector"]
categories = ["game-development", "science", "simulation"]

[features]
default = ["std", "f32", "f64"]

# Enable single-precision floating point types.
f32 = ["glam_matrix_extras?/f32"]

# Enable double-precision floating point types.
f64 = ["glam_matrix_extras?/f64"]

# Enable wide SIMD types for the `glam_matrix_extras` crate.
glam_matrix_extras = ["dep:glam_matrix_extras"]

# Enable wide SIMD types for the `bevy_math` crate.
bevy_math = ["dep:bevy_math"]

# Enable reflection using `bevy_reflect`.
bevy_reflect = ["dep:bevy_reflect", "bevy_reflect/glam"]

# Enable data serialization/deserialization using `serde`.
serde = [
    "dep:serde",
    "glam/serde",
    "glam_matrix_extras?/serde",
    "bevy_math?/serialize",
]

# Enable `approx` to approximate floating point equality comparisons and assertions for types.
approx = [
    "dep:approx",
    "glam/approx",
    "glam_matrix_extras?/approx",
    "bevy_math?/approx",
]

# Enable libm mathematical functions for glam types to ensure consistent outputs
# across platforms at the cost of losing hardware-level optimization using intrinsics.
libm = ["glam/libm", "glam_matrix_extras?/libm", "bevy_math?/libm"]

# Enable libm mathematical functions as a fallback for no_std environments.
# Can be overridden with std feature.
nostd-libm = [
    "glam/nostd-libm",
    "glam_matrix_extras?/nostd-libm",
    "bevy_math?/nostd-libm",
]

# Enable the Rust standard library.
std = ["glam/std", "glam_matrix_extras?/std", "bevy_math?/std"]

[dependencies]
# Math
wide = { version = "0.7", default-features = false }
glam = { version = "0.30", default-features = false }
glam_matrix_extras = { git = "https://github.com/Jondolf/glam_matrix_extras", optional = true, default-features = false }
bevy_math = { version = "0.17.0-rc", optional = true, default-features = false }
approx = { version = "0.5", optional = true }

# Reflection
bevy_reflect = { version = "0.17.0-rc", optional = true }
serde = { version = "1.0", optional = true, features = ["serde_derive"] }

[dev-dependencies]
# Enable some features for testing.
glam_wide = { path = "./", features = ["f32", "f64", "approx"] }
glam_matrix_extras = { git = "https://github.com/Jondolf/glam_matrix_extras" }
bevy_math = { version = "0.17.0-rc" }

[lints.clippy]
alloc_instead_of_core = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
